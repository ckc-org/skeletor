# NOTE: This _has _to start with `x-`
x-logging: &default-logging
  options:
    max-size: "20k"
    max-file: "10"

services:
  django:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    command: uvicorn asgi:application --host 0.0.0.0 --port 8000 --reload
    # can't use gunicorn workers with --reload, fyi!
    #command: gunicorn asgi:application --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    environment:
      # To make things play nice with dj-database-url
      - DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    env_file: .env
    volumes:
      - ./src/backend:/app
    ports:
      - 8000:8000
    depends_on:
      - db
    stdin_open: true
    tty: true
    logging: *default-logging

  db:
    image: postgres:16-alpine
    # Use this instead for GeoSpatial stuff..
    #image: postgis/postgis:16-3.4-alpine
    env_file: .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data:delegated
    logging: *default-logging

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    command: bash -c "bun install --no-save && bun --bun run dev"
#    command: bash -c "npm i . && npx nuxi dev"
    env_file: .env
    environment:
      - HOST=0.0.0.0
      - DISPLAY=:99
    ports:
      - 3000:3000
      - 24678:24678
    volumes:
      # For quick development with Skeletor, you can swap out the frontend dir
      # with the env var FRONTEND_DIR! Defaults to VueJS
      - ${FRONTEND_DIR:-./src/frontend}:/frontend:cached

      # These volume mounts to exclude node_modules and build caches:
#      - /frontend/node_modules
#      - /frontend/.nuxt
#      - /frontend/.next
    depends_on:
      - django
    logging: *default-logging

  redis:
    image: redis
    env_file: .env
    ports:
        - 6379:6379
    logging: *default-logging
    volumes:
        - ./volumes/redis:/data
        - ./docker/redis.conf:/redis.conf
        - ./docker/sysctl.conf:/etc/sysctl.conf
    restart: unless-stopped
    command: redis-server /redis.conf --bind 0.0.0.0

volumes:
  db_data:
