#!/bin/sh
red="\033[0;31m"
green="\033[0;32m"
yellow="\033[0;33m"
color_off="\033[m"

# Function to check for unstaged Django migrations
check_django_migrations() {
    unstaged_migrations=$(git ls-files --others --exclude-standard | grep -E 'migrations/.*\.py$')
    if [ -n "$unstaged_migrations" ]; then
        echo "${yellow}⚠️ Unstaged Django migrations found:${color_off}"
        echo "$unstaged_migrations"
        echo "\n${red}Please stage these migrations before committing.${color_off}\n"
        return 1
    fi
    return 0
}

printf "\n==================== Pre-commit checks ====================\n"

# Check for unstaged Django migrations
printf "\n------------------- Checking Django migrations -------------------\n"
check_django_migrations
if [ $? -ne 0 ]; then
    exit 1
fi
echo "${green}✅ No unstaged Django migrations found${color_off}"

printf "\n==================== Frontend code-style checks ====================\n"
#-------------------------------------------------------------------------------
# Frontend linting
#-------------------------------------------------------------------------------
# Get list of staged files that match the frontend file pattern

cd src/react-app # should be src/frontend but I'm using react-app for now
staged_files=$(git diff --cached --name-only --diff-filter=d | grep -E 'react-app/.*\.(js|ts|jsx|tsx)$') || true
# remove src/react-app from each file path, because we're already in the react-app directory
staged_files=$(echo "$staged_files" | sed 's/src\/react-app\///g')

if [ -n "$staged_files" ]; then
    echo "Files to format:"
    echo "$staged_files"

    # Run Biome check on staged files
    npx biome format --write --files-ignore-unknown=true $staged_files
    check_status=$?

    # Add formatted files back to staging
    git add $staged_files

    # If checks or formatting failed, exit with an error
    if [ $check_status -ne 0 ]; then
        echo "${red}❌ Code checks or formatting failed${color_off}"
        echo "Please review the issues, stage any formatting changes, and try committing again."
        exit 1
    else
        echo "${green}✅ Code checks and formatting passed${color_off}\n"
    fi
fi

# Go back to root of the repository
cd ../../

echo "${green}✅ All pre-commit checks passed${color_off}\n"
exit 0
