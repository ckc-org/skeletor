on:
  push:
    branches: [ '*' ]

env:
  DB_HOST: localhost
  REDIS_URL: redis://localhost:6379

jobs:
  build:
    name: Django tests
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
      with:
        # Fetch all branches (for migration conflict checks)
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
        cache: 'pip'
        cache-dependency-path: |
          requirements.dev.txt
          requirements.txt

    - name: Cache pip
      id: cache-pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('src/backend/requirements.dev.txt') }}-${{ hashFiles('src/backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install python dependencies
      run: |
        pip install -r requirements.dev.txt

    - name: Lint with ruff
      run: |
        ruff --config src/backend/pyproject.toml src/backend

    - name: Test with pytest
      run: |
        cd src/backend
        touch templates/index.html
        pytest
